SSN Card

let
  fileText = if [#"List of Client File Name"] = null then "" else Text.From([#"List of Client File Name"]),
  result = if Text.Contains(fileText, "Social Security Card", Comparer.OrdinalIgnoreCase) then 1 else 0
in
  result
________________________________________
Birth Certificate

let
  fileText = if [#"List of Client File Name"] = null then "" else Text.From([#"List of Client File Name"]),
  result = if Text.Contains(fileText, "Birth Certificate or Hospital Record of Birth", Comparer.OrdinalIgnoreCase) then 1 else 0
in
  result
________________________________________
CDL or State ID
let
  fileTextRaw = if [#"List of Client File Name"] = null then "" else Text.From([#"List of Client File Name"]),
  fileText = Text.Replace(fileTextRaw, "’", "'"),
  pattern = "Driver's License/State ID Card/Photo ID/ School Identification Card",
  result = if Text.Contains(fileText, pattern, Comparer.OrdinalIgnoreCase) then 1 else 0
in
  result
________________________________________
Disability Verification
let
  fileText = if [#"List of Client File Name"] = null then "" else Text.From([#"List of Client File Name"]),
  result = if Text.Contains(fileText, "Disability Verification", Comparer.OrdinalIgnoreCase) then 1 else 0
in
  result


________________________________________
Health Insurance Column Flag

let
  fileText = if [#"List of Client File Name"] = null then "" else Text.From([#"List of Client File Name"]),
  matches = List.RemoveNulls({
    if Text.Contains(fileText, "Medicaid or Medicare Card", Comparer.OrdinalIgnoreCase) then "Medicare/Medicaid" else null,
    if Text.Contains(fileText, "Health Insurance Documentation", Comparer.OrdinalIgnoreCase) then "Other Health Insurance" else null
  }),
  listText = Text.Combine(matches, ", "),
  result = if Text.Length(listText) > 0 then "1 - " & listText else "0"
in
  result







________________________________________
6.1 CES Status
Description: flags whether the client’s CES assessment is current, overdue, or missing.
if [Latest CES Assessment Date] = null then
    "CES Not Done"
else if Duration.Days(Date.From(DateTime.LocalNow()) 
       - Date.From([Latest CES Assessment Date])) > 730 then
    "Renewal Overdue"
else
    "Current"

________________________________________
6.2 Document Ready
Description: returns “Document Ready” only when all required identity documents are present.
if [CDL or State ID] = 1 
   and [SSN Card] = 1 
   and Text.Contains([Proof of Income], "1") then
    "Document Ready" 
else
    "Not Document Ready"

________________________________________
6.3 Housing Matching Ready
Description: requires the three documents plus a CES score ≥ 8 (null scores count as 0).
let
    // Normalize fields
    Score =
        if [Assessment Score] = null then 0 else [Assessment Score],

    SurveyName =
        if [Survey Name] = null then "" else Text.Trim([Survey Name]),

    // Pick threshold by survey:
    // - "CES" anywhere in the name -> >= 8
    // - exactly "Los Angeles Housing Assessment Tool (LA HAT)" -> >= 17
    Threshold =
        if Text.Contains(Text.Upper(SurveyName), "CES")
            then 8
        else if SurveyName = "Los Angeles Housing Assessment Tool (LA HAT)"
            then 17
        else null,   // no threshold if survey isn't recognized

    HasDocsAndIncome =
        [CDL or State ID] = 1
        and [SSN Card] = 1
        and Text.Contains(Text.From([Proof of Income]), "1"),

    IsReady =
        HasDocsAndIncome
        and Threshold <> null
        and Score >= Threshold
in
    if IsReady then "Housing Matching Ready" else "Not Housing Matching Ready"



________________________________________
Proof of Income

let
  fileText = if [#"List of Client File Name"] = null then "" else Text.From([#"List of Client File Name"]),
  matches = List.RemoveNulls({
    if Text.Contains(fileText, "Pay Stub", Comparer.OrdinalIgnoreCase) then "Pay Stub" else null,
    if Text.Contains(fileText, "Supplemental Security Disability Income (SSDI) Forms", Comparer.OrdinalIgnoreCase) then "SSDI" else null,
    if Text.Contains(fileText, "Supplemental Security Income (SSI) Forms", Comparer.OrdinalIgnoreCase) then "SSI" else null,
    if Text.Contains(fileText, "General Relief (GR) Form", Comparer.OrdinalIgnoreCase) then "GR" else null,
    if Text.Contains(fileText, "Food Stamp Card or Award Letter", Comparer.OrdinalIgnoreCase) then "Food Stamp" else null,
    if Text.Contains(fileText, "CalWORKS Forms", Comparer.OrdinalIgnoreCase) then "CalWORKS" else null,
    if Text.Contains(fileText, "Form 1087 - Self Declaration of Income/No Income Form", Comparer.OrdinalIgnoreCase) then "Form 1087" else null,
    if Text.Contains(fileText, "Form 1084 - 3rd Party Income Verification", Comparer.OrdinalIgnoreCase) then "Form 1084" else null,
    if Text.Contains(fileText, "Alimony Agreement", Comparer.OrdinalIgnoreCase) then "Alimony Agreement" else null,
    if Text.Contains(fileText, "Social Security (NUMI) Printout", Comparer.OrdinalIgnoreCase) then "Social Security (NUMI) Printout" else null,
    if Text.Contains(fileText, "Tax Return", Comparer.OrdinalIgnoreCase) then "Tax Return" else null,
    if Text.Contains(fileText, "Veterans Affairs (VA) Benefits Award Letter", Comparer.OrdinalIgnoreCase) then "Veterans Affairs (VA) Benefits Award Letter" else null,
    if Text.Contains(fileText, "Self Employment Document", Comparer.OrdinalIgnoreCase) then "Self Employment Document" else null,
    if Text.Contains(fileText, "Other Financial Document", Comparer.OrdinalIgnoreCase) then "Other Financial Document" else null
  }),
  listText = Text.Combine(matches, ", "),
  result = if Text.Length(listText) > 0 then "1 - " & listText else "0"
in
  result


________________________________________
6.4 Intervention Alert
Description: highlights high-priority clients based on days in project and document status.

// Intervention Alert
// Description: highlights high-priority clients based on days in project and document/assessment status.
let
    // Inputs (with safe defaults/typing)
    RawScore    = [Assessment Score],
    Score       = try Number.From(RawScore) otherwise null,   // "" or text -> null
    SurveyName  = if [Survey Name] = null then "" else Text.Trim([Survey Name]),
    Status      = try [Assessment Status] otherwise (try [CES Status] otherwise null),
    Days        = [Enrollments Days in Project],
    DocsReady   = [Document Ready] <> "Not Document Ready",

    // Threshold by survey:
    // - name contains "CES" -> 8
    // - exactly "Los Angeles Housing Assessment Tool (LA HAT)" -> 17
    Threshold =
        if Text.Contains(Text.Upper(SurveyName), "CES") then 8
        else if SurveyName = "Los Angeles Housing Assessment Tool (LA HAT)" then 17
        else null,  // unrecognized survey (no threshold)

    // Flags
    LongStay    = Days <> null and Days >= 120,
    MidStay     = Days <> null and Days >= 75,
    LowAssessment =
        Threshold <> null and (Score = null or Score < Threshold),
    AssessmentExpired =
        Status = "Renewal Overdue" or Status = "Expired",

    // Output
    Result =
        if      LongStay and not DocsReady then
                "≥120 days & missing docs – ESCALATE"
        else if LongStay and AssessmentExpired then
                "≥120 days & assessment expired – ESCALATE"
        else if LongStay and LowAssessment then
                "≥120 days & score below threshold – ESCALATE"
        else if LongStay then
                "≥120 days & docs/assessment OK – monitor"
        else if MidStay and not DocsReady then
                "75–119 days & missing docs – ACTION"
        else if MidStay and (AssessmentExpired or LowAssessment) then
                "75–119 days & assessment risk – ACTION"
        else
                "No Action Needed"
in
    Result

__________________________________________________________________________________________________
Case Count Category

let
    v = [#"MonthName Case Note Count"],
    t = try Number.From(v),
    n = if t[HasError] or t[Value] = null then 0 else t[Value]
in
    if n >= 5 then
        "5 or more case notes"
    else
        Text.From(n) & " case note" & (if n = 1 then "" else "s")
